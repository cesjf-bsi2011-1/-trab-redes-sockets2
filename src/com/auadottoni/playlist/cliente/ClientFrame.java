package com.auadottoni.playlist.cliente;

import com.auadottoni.playlist.model.Music;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import sun.audio.*;
/**
 *
 * @author auadtassio
 */
public class ClientFrame extends javax.swing.JFrame {

    private Music music;
    private Socket socket;
    private ObjectOutputStream outputStream;
    private ObjectInputStream inputStream;
    private Thread thread;
    private static final String NEXT_MUSIC = "next_music";
    private static final String CLOSE_STREAMING_MESSAGE = "close_streaming";
    private Clip clip;
    
    /**
     * Creates new form ClientFrame
     */
    public ClientFrame() {
        initComponents();
    }

    public void runClient() {
        buttonPlay.setEnabled(false);
        buttonStop.setEnabled(true);
        
        thread = new Thread(
            new Runnable() {

                @Override
                public void run() {
                    try {
                        //Connecting to server
                        socket = new Socket(InetAddress.getByName("127.0.0.1"), 5555);
 
                        //Setting OutputStream and InputStream
                        settingStreamObjects();

                        //Receiving music or asking a new one
                        streaming();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Conex√£o perdida ou recusada!");
                        try {
                            stopClient();
                        } catch (IOException ex1) {
                            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                }
            }
        );
        
        thread.start();
    }
    
    public void stopClient() throws IOException {
        thread.interrupt();
        if(socket != null) {
            socket.close();
        }
        labelMusicName.setText("...");
        labelMusicAuthor.setText("...");
        buttonPlay.setEnabled(true);
        buttonStop.setEnabled(false);
    }
    
    private void settingStreamObjects() throws IOException {
        outputStream = new ObjectOutputStream(socket.getOutputStream());
        outputStream.flush();
        inputStream = new ObjectInputStream(socket.getInputStream());
    }
    
    private void streaming() throws IOException, ClassNotFoundException, LineUnavailableException, UnsupportedAudioFileException {
        sendMessage(NEXT_MUSIC);
        while(true) {
            music = (Music) inputStream.readObject();
            SwingUtilities.invokeLater(
                new Runnable() {

                    @Override
                    public void run() {
                        labelMusicName.setText(music.getName());
                        labelMusicAuthor.setText(music.getAuthor());
                    }
                }
            ); 
                
            AudioData audiodata = new AudioData(music.getFilebytes());
            AudioDataStream audioDataStream = new AudioDataStream(audiodata);
            clip = AudioSystem.getClip();
            AudioInputStream audioInputStream = 
                    AudioSystem.getAudioInputStream(audioDataStream);
            clip.open(audioInputStream);
            clip.addLineListener(new LineListener() {

                @Override
                public void update(LineEvent event) {
                    if (event.getType() == LineEvent.Type.STOP) {
                        try {
                            sendMessage(NEXT_MUSIC);
                        } catch (IOException ex) {
                            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            });
            clip.start();
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMusicName = new javax.swing.JLabel();
        labelMusicAuthor = new javax.swing.JLabel();
        buttonPlay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelMusicName.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelMusicName.setText("...");
        getContentPane().add(labelMusicName, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 12, -1, -1));

        labelMusicAuthor.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        labelMusicAuthor.setText("...");
        getContentPane().add(labelMusicAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 59, -1, -1));

        buttonPlay.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        buttonPlay.setText("Play");
        buttonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayActionPerformed(evt);
            }
        });
        getContentPane().add(buttonPlay, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 12, 102, 76));

        jLabel1.setFont(new java.awt.Font("Ubuntu Light", 0, 24)); // NOI18N
        jLabel1.setText("Music:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        jLabel2.setFont(new java.awt.Font("Ubuntu Light", 0, 24)); // NOI18N
        jLabel2.setText("Author:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 59, -1, -1));

        buttonStop.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        buttonStop.setText("Stop");
        buttonStop.setEnabled(false);
        buttonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopActionPerformed(evt);
            }
        });
        getContentPane().add(buttonStop, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 12, 102, 76));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayActionPerformed
        runClient();
    }//GEN-LAST:event_buttonPlayActionPerformed

    private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
        try {
            clip.stop();
            sendMessage(CLOSE_STREAMING_MESSAGE);
            stopClient();            
        } catch (IOException ex) {
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonStopActionPerformed

    public void sendMessage(String message) throws IOException {
        outputStream.writeObject(message);
        outputStream.flush();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPlay;
    private javax.swing.JButton buttonStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelMusicAuthor;
    private javax.swing.JLabel labelMusicName;
    // End of variables declaration//GEN-END:variables

}
